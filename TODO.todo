☐ handleClickDay() is too complicated?
☐ Keyboard navigation
    ☐ https://reactjs.org/docs/accessibility.html#programmatically-managing-focus
☐ Week selection
☐ Experiment with state reducer pattern
☐ Tests
    ☐ Think of adding UI (knobs, options etc) for controlling calendar properties so they can be tested
✔ Add ability to control currently viewed month @started(20-04-08 19:10) @done(20-04-09 18:12) @lasted(23h2m36s)
☐ Should selection of dates outside of current month be prevented?
✘ Should `nextDayOf` & `prevDayOf` reset time to 0h 0m 0s 0ms? @cancelled(20-02-01 10:02)
    ✔ I don't think so, it's not the responsibility of those functions to reset time. @done(20-02-01 10:02)
☐ Make functions to be aware of time?
    ✔ Change `fromArray` to support time (maybe fromArray([2019, 9, 1], [15, 59, 59])?) @done(20-02-01 11:04)
        ✔ Changed to fromArray([year, month, date, hour, minute, second, millisecond]) @done(20-02-01 11:04)
    ✔ Update `toArray` to support time? e.g return [2019, 9, 1, 18, 30, 0, 0] @done(20-02-01 11:04)
    ☐ Should `isSame` support comparison down to hour / minute / second / millisecond resolutions?
☐ Make style override easy
☐ [bug] DatePickerWithPopup looks bad on small viewport size
✘ Time selection @cancelled(20-02-01 09:52)
✘ Year selection @cancelled(20-02-01 09:52)
    ✔ use DatePickerWithPopup for now, it has an input field @done(20-02-01 09:54)
✔ Disable selection of dates conditionally @done(19-12-28 09:53)
✔ Add range selection @started(19-09-21 14:48) @done (21/12/2019, 12:50:31)
    ✔ swap start/end if one later than another @done(19-09-28 15:05)
    ✔ write function that checks if given date is included in list of dates @started(19-09-28 15:47) @done(19-09-28 21:06) @lasted(5h19m7s)
        ✔ examples: @done(19-09-28 21:06)
            ✔ isDateIn(date, [ new Date(2019, 0, 1) ]) @done(19-09-28 21:06)
            ✔ isDateIn(date, [ new Date(2019, 0, 1), [new Date(2019, 0, 10), new Date(2019, 0, 15)] ]) @done(19-09-28 21:06)
        ✔ after implemented, replace `isSelected(selected, day)` function with it @done(19-09-28 21:06)
✔ Add date input @done (21/12/2019, 12:51:25)
    ✔ Variation #1 - clicking on an input should open calendar in a popup @done (21/12/2019, 12:51:17)
    ✔ Variation #2 - allow user to enter date manually (calendar opens on clicking icon/button) @done (21/12/2019, 12:51:18)
✔ Add ability to provide custom Day component (maybe using `dayComponent` as prop name?) @started(20-01-18 10:55) @done(20-01-18 13:36) @lasted(2h41m32s)
✔ Hover trail (for range selection) @started(20-01-11 13:30) @done(20-01-11 16:34) @lasted(3h4m35s)
✔ if isRTL=true, swap between `onBackClick` and `onNextClick` handlers @done (21/12/2019, 12:54:09)
    ✔ i.e clicking on left arrow should go forward @done (21/12/2019, 12:54:10)
✔ Mark today's day @done(20-01-07 22:29)
    ✔ border: 1px dashed #000 @done(20-01-07 22:29)
✔ Locale configuration @done(20-01-18 10:40)
    ✔ ``` @done(20-01-18 10:40)
        <DatePicker calendar={{isRTL: true, locale: 'he-IL', weekday: 'narrow'}} .../>
        ```
✔ If date is selected, make calendar show the month of the date @done(19-12-28 09:56)
✔ Date selection functionality @started(19-09-20 10:00) @done(19-09-20 22:03) @lasted(12h3m33s)
    ✔ Add callback ??? @done(19-09-20 22:03)
    ✔ Show selected date @done(19-09-20 22:03)
✘ Week numbers @started(19-10-01 10:43) @cancelled(19-10-01 14:32) @wasted(3h49m20s)
    ✔ maybe other time @done(19-10-01 14:32)
✔ Add `data-test-id` attributes where needed (days, navigation arrows) to make the component testable @started(19-09-30 18:57) @done(19-09-30 19:07) @lasted(10m2s)
✘ Multiple calendars @started(19-10-01 10:08) @cancelled(19-10-01 10:28) @wasted(20m56s)
    ✔ meh, one month is good enough. @done(19-10-01 10:28)
✔ Implement `nextDayOf(day)` in calendar.js @done(19-09-30 18:09)
    ✔ function should accept Date object and return Date object representing next day @done(19-09-30 18:09)
✔ Implement `prevDayOf(day)` @done(19-09-30 18:09)
✔ Implement date range input component @started(19-12-21 13:03) @done(19-12-21 19:02) @lasted(5h59m42s)
✔ [bug] Passing value to <DatePicker> causes infinite rerender @done(19-12-28 09:49)
    ✔ CHANGE_VALUE printed in console @done(19-12-28 09:49)
        const [date, setDate] = useState([ new Date(2020, 0, 1) ]);
        <DatePicker value={date} onChange={handleChange} inputComponent={DateInput}/>
✔ Change range logic @started(20-01-07 22:29) @done(20-01-11 10:03) @lasted(3d11h34m41s)
    ✔ If user selects second date which is earlier than the start date, then it should become the new start date @done(20-01-11 10:03)

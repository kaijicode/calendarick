☐ Disable selection of dates conditionally
    ☐ How date range selection should behave when there is unselectable date?
        ☐ Allow selection?
            ☐ Represent the range differently e.g two ranges instead of one?
✔ Add range selection @started(19-09-21 14:48) @done (21/12/2019, 12:50:31)
    ✔ swap start/end if one later than another @done(19-09-28 15:05)
    ✔ write function that checks if given date is included in list of dates @started(19-09-28 15:47) @done(19-09-28 21:06) @lasted(5h19m7s)
        ✔ examples: @done(19-09-28 21:06)
            ✔ isDateIn(date, [ new Date(2019, 0, 1) ]) @done(19-09-28 21:06)
            ✔ isDateIn(date, [ new Date(2019, 0, 1), [new Date(2019, 0, 10), new Date(2019, 0, 15)] ]) @done(19-09-28 21:06)
        ✔ after implemented, replace `isSelected(selected, day)` function with it @done(19-09-28 21:06)
☐ handleClickDay() is too complicated?
✔ Add date input @done (21/12/2019, 12:51:25)
    ✔ Variation #1 - clicking on an input should open calendar in a popup @done (21/12/2019, 12:51:17)
    ✔ Variation #2 - allow user to enter date manually (calendar opens on clicking icon/button) @done (21/12/2019, 12:51:18)
☐ Add ability to provide custom Day component (maybe using `dayComponent` as prop name?)
☐ Hover trail (for range selection)
☐ Keyboard navigation
✔ if isRTL=true, swap between `onBackClick` and `onNextClick` handlers @done (21/12/2019, 12:54:09)
    ✔ i.e clicking on left arrow should go forward @done (21/12/2019, 12:54:10)
☐ Mark today's day
    ☐ border: 1px dashed #000
☐ Week selection
☐ Locale configuration
☐ Experiment with state reducer pattern
☐ Tests
    ☐ Think of adding UI (knobs, options etc) for controlling calendar properties so they can be tested
☐ If date is selected, make calendar show the month of the date
☐ Add ability to control currently viewed month
☐ Should selection of dates outside of current month be prevented?
☐ Should `nextDayOf` & `prevDayOf` reset time to 0h 0m 0s 0ms?
☐ Make functions to be aware of time?
    ☐ Change `fromArray` to support time (maybe fromArray([2019, 9, 1], [15, 59, 59])?)
    ☐ Update `toArray` to support time? e.g return [2019, 9, 1, 18, 30, 0, 0]
    ☐ Should `isSame` support comparison down to hour / minute / second / millisecond resolutions?
☐ Make style override easy
☐ Time selection
☐ Year selection
✔ Date selection functionality @started(19-09-20 10:00) @done(19-09-20 22:03) @lasted(12h3m33s)
    ✔ Add callback ??? @done(19-09-20 22:03)
    ✔ Show selected date @done(19-09-20 22:03)
✘ Week numbers @started(19-10-01 10:43) @cancelled(19-10-01 14:32) @wasted(3h49m20s)
    ✔ maybe other time @done(19-10-01 14:32)
✔ Add `data-test-id` attributes where needed (days, navigation arrows) to make the component testable @started(19-09-30 18:57) @done(19-09-30 19:07) @lasted(10m2s)
✘ Multiple calendars @started(19-10-01 10:08) @cancelled(19-10-01 10:28) @wasted(20m56s)
    ✔ meh, one month is good enough. @done(19-10-01 10:28)
✔ Implement `nextDayOf(day)` in calendar.js @done(19-09-30 18:09)
    ✔ function should accept Date object and return Date object representing next day @done(19-09-30 18:09)
✔ Implement `prevDayOf(day)` @done(19-09-30 18:09)
✔ Implement date range input component @started(19-12-21 13:03) @done(19-12-21 19:02) @lasted(5h59m42s)
☐ [bug] Passing value to <DatePicker> causes infinite rerender
    ☐ CHANGE_VALUE printed in console
        const [date, setDate] = useState([ new Date(2020, 0, 1) ]);
        <DatePicker value={date} onChange={handleChange} inputComponent={DateInput}/>
☐ Change range logic
    ☐ If user selects second date which is earlier than the start date, then it should become the new start date
✔ [bug] DatePickerWithPopup looks bad on small viewport size @done(19-12-28 09:48)
